/*
 * generated by Xtext 2.12.0
 */
grammar InternalLinit;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package linit.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package linit.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import linit.services.LinitGrammarAccess;

}

@parser::members {

 	private LinitGrammarAccess grammarAccess;

    public InternalLinitParser(TokenStream input, LinitGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "programa";
   	}

   	@Override
   	protected LinitGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleprograma
entryRuleprograma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramaRule()); }
	iv_ruleprograma=ruleprograma
	{ $current=$iv_ruleprograma.current; }
	EOF;

// Rule programa
ruleprograma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramaAccess().getDDeclaracionesParserRuleCall_0_0());
				}
				lv_d_0_0=ruledeclaraciones
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramaRule());
					}
					set(
						$current,
						"d",
						lv_d_0_0,
						"linit.Linit.declaraciones");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramaAccess().getIInstruccionesParserRuleCall_1_0());
				}
				lv_i_1_0=ruleinstrucciones
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramaRule());
					}
					set(
						$current,
						"i",
						lv_i_1_0,
						"linit.Linit.instrucciones");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuledeclaraciones
entryRuledeclaraciones returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclaracionesRule()); }
	iv_ruledeclaraciones=ruledeclaraciones
	{ $current=$iv_ruledeclaraciones.current; }
	EOF;

// Rule declaraciones
ruledeclaraciones returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='PROCEDIMIENTO'
			{
				newLeafNode(otherlv_0, grammarAccess.getDeclaracionesAccess().getPROCEDIMIENTOKeyword_0_0());
			}
			    |
			this_PROCEDIMIENTO_1=RULE_PROCEDIMIENTO
			{
				newLeafNode(this_PROCEDIMIENTO_1, grammarAccess.getDeclaracionesAccess().getPROCEDIMIENTOTerminalRuleCall_0_1());
			}
		)
		this_IDENTIFICADOR_2=RULE_IDENTIFICADOR
		{
			newLeafNode(this_IDENTIFICADOR_2, grammarAccess.getDeclaracionesAccess().getIDENTIFICADORTerminalRuleCall_1());
		}
		{
			newCompositeNode(grammarAccess.getDeclaracionesAccess().getParametrosParserRuleCall_2());
		}
		ruleparametros
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getDeclaracionesAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclaracionesAccess().getIInstruccionesParserRuleCall_4_0());
				}
				lv_i_5_0=ruleinstrucciones
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclaracionesRule());
					}
					set(
						$current,
						"i",
						lv_i_5_0,
						"linit.Linit.instrucciones");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='FIN'
			{
				newLeafNode(otherlv_6, grammarAccess.getDeclaracionesAccess().getFINKeyword_5_0());
			}
			    |
			this_FIN_7=RULE_FIN
			{
				newLeafNode(this_FIN_7, grammarAccess.getDeclaracionesAccess().getFINTerminalRuleCall_5_1());
			}
		)
		otherlv_8='.'
		{
			newLeafNode(otherlv_8, grammarAccess.getDeclaracionesAccess().getFullStopKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclaracionesAccess().getDDeclaracionesParserRuleCall_7_0());
				}
				lv_d_9_0=ruledeclaraciones
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclaracionesRule());
					}
					set(
						$current,
						"d",
						lv_d_9_0,
						"linit.Linit.declaraciones");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)?
;

// Entry rule entryRuleparametros
entryRuleparametros returns [String current=null]:
	{ newCompositeNode(grammarAccess.getParametrosRule()); }
	iv_ruleparametros=ruleparametros
	{ $current=$iv_ruleparametros.current.getText(); }
	EOF;

// Rule parametros
ruleparametros returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				kw='IMPORTA'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getParametrosAccess().getIMPORTAKeyword_0_0_0());
				}
				    |
				this_IMPORTA_1=RULE_IMPORTA
				{
					$current.merge(this_IMPORTA_1);
				}
				{
					newLeafNode(this_IMPORTA_1, grammarAccess.getParametrosAccess().getIMPORTATerminalRuleCall_0_0_1());
				}
			)
			(
				(
					(
						kw='VARIABLE'
						{
							$current.merge(kw);
							newLeafNode(kw, grammarAccess.getParametrosAccess().getVARIABLEKeyword_0_1_0_0_0());
						}
						    |
						this_VARIABLE_3=RULE_VARIABLE
						{
							$current.merge(this_VARIABLE_3);
						}
						{
							newLeafNode(this_VARIABLE_3, grammarAccess.getParametrosAccess().getVARIABLETerminalRuleCall_0_1_0_0_1());
						}
					)
					{
						newCompositeNode(grammarAccess.getParametrosAccess().getTipoVariableParserRuleCall_0_1_0_1());
					}
					this_tipoVariable_4=ruletipoVariable
					{
						$current.merge(this_tipoVariable_4);
					}
					{
						afterParserOrEnumRuleCall();
					}
					this_IDENTIFICADOR_5=RULE_IDENTIFICADOR
					{
						$current.merge(this_IDENTIFICADOR_5);
					}
					{
						newLeafNode(this_IDENTIFICADOR_5, grammarAccess.getParametrosAccess().getIDENTIFICADORTerminalRuleCall_0_1_0_2());
					}
				)
				    |
				{
					newCompositeNode(grammarAccess.getParametrosAccess().getArregloParserRuleCall_0_1_1());
				}
				this_arreglo_6=rulearreglo
				{
					$current.merge(this_arreglo_6);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
			{
				newCompositeNode(grammarAccess.getParametrosAccess().getListaParametrosParserRuleCall_0_2());
			}
			this_listaParametros_7=rulelistaParametros
			{
				$current.merge(this_listaParametros_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getParametrosAccess().getExporta2ParserRuleCall_0_3());
			}
			this_exporta2_8=ruleexporta2
			{
				$current.merge(this_exporta2_8);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getParametrosAccess().getExporta2ParserRuleCall_1());
		}
		this_exporta2_9=ruleexporta2
		{
			$current.merge(this_exporta2_9);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleexporta2
entryRuleexporta2 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExporta2Rule()); }
	iv_ruleexporta2=ruleexporta2
	{ $current=$iv_ruleexporta2.current.getText(); }
	EOF;

// Rule exporta2
ruleexporta2 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='EXPORTA'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getExporta2Access().getEXPORTAKeyword_0_0());
			}
			    |
			this_EXPORTA_1=RULE_EXPORTA
			{
				$current.merge(this_EXPORTA_1);
			}
			{
				newLeafNode(this_EXPORTA_1, grammarAccess.getExporta2Access().getEXPORTATerminalRuleCall_0_1());
			}
		)
		(
			(
				(
					kw='VARIABLE'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getExporta2Access().getVARIABLEKeyword_1_0_0_0());
					}
					    |
					this_VARIABLE_3=RULE_VARIABLE
					{
						$current.merge(this_VARIABLE_3);
					}
					{
						newLeafNode(this_VARIABLE_3, grammarAccess.getExporta2Access().getVARIABLETerminalRuleCall_1_0_0_1());
					}
				)
				{
					newCompositeNode(grammarAccess.getExporta2Access().getTipoVariableParserRuleCall_1_0_1());
				}
				this_tipoVariable_4=ruletipoVariable
				{
					$current.merge(this_tipoVariable_4);
				}
				{
					afterParserOrEnumRuleCall();
				}
				this_IDENTIFICADOR_5=RULE_IDENTIFICADOR
				{
					$current.merge(this_IDENTIFICADOR_5);
				}
				{
					newLeafNode(this_IDENTIFICADOR_5, grammarAccess.getExporta2Access().getIDENTIFICADORTerminalRuleCall_1_0_2());
				}
			)
			    |
			{
				newCompositeNode(grammarAccess.getExporta2Access().getArregloParserRuleCall_1_1());
			}
			this_arreglo_6=rulearreglo
			{
				$current.merge(this_arreglo_6);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		{
			newCompositeNode(grammarAccess.getExporta2Access().getListaParametrosParserRuleCall_2());
		}
		this_listaParametros_7=rulelistaParametros
		{
			$current.merge(this_listaParametros_7);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)?
;

// Entry rule entryRulelistaParametros
entryRulelistaParametros returns [String current=null]:
	{ newCompositeNode(grammarAccess.getListaParametrosRule()); }
	iv_rulelistaParametros=rulelistaParametros
	{ $current=$iv_rulelistaParametros.current.getText(); }
	EOF;

// Rule listaParametros
rulelistaParametros returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getListaParametrosAccess().getSemicolonKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListaParametrosAccess().getTipoVariableParserRuleCall_1_0_0());
				}
				this_tipoVariable_1=ruletipoVariable
				{
					$current.merge(this_tipoVariable_1);
				}
				{
					afterParserOrEnumRuleCall();
				}
				this_IDENTIFICADOR_2=RULE_IDENTIFICADOR
				{
					$current.merge(this_IDENTIFICADOR_2);
				}
				{
					newLeafNode(this_IDENTIFICADOR_2, grammarAccess.getListaParametrosAccess().getIDENTIFICADORTerminalRuleCall_1_0_1());
				}
			)
			    |
			{
				newCompositeNode(grammarAccess.getListaParametrosAccess().getArregloParserRuleCall_1_1());
			}
			this_arreglo_3=rulearreglo
			{
				$current.merge(this_arreglo_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		{
			newCompositeNode(grammarAccess.getListaParametrosAccess().getListaParametrosParserRuleCall_2());
		}
		this_listaParametros_4=rulelistaParametros
		{
			$current.merge(this_listaParametros_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)?
;

// Entry rule entryRuleinstrucciones
entryRuleinstrucciones returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstruccionesRule()); }
	iv_ruleinstrucciones=ruleinstrucciones
	{ $current=$iv_ruleinstrucciones.current; }
	EOF;

// Rule instrucciones
ruleinstrucciones returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInstruccionesAccess().getInstruccionesAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInstruccionesAccess().getNominacionParserRuleCall_1_0_0());
				}
				rulenominacion
				{
					afterParserOrEnumRuleCall();
				}
				otherlv_2='.'
				{
					newLeafNode(otherlv_2, grammarAccess.getInstruccionesAccess().getFullStopKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInstruccionesAccess().getIInstruccionesParserRuleCall_1_0_2_0());
						}
						lv_i_3_0=ruleinstrucciones
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstruccionesRule());
							}
							set(
								$current,
								"i",
								lv_i_3_0,
								"linit.Linit.instrucciones");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				{
					newCompositeNode(grammarAccess.getInstruccionesAccess().getArregloParserRuleCall_1_1_0());
				}
				rulearreglo
				{
					afterParserOrEnumRuleCall();
				}
				otherlv_5='.'
				{
					newLeafNode(otherlv_5, grammarAccess.getInstruccionesAccess().getFullStopKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInstruccionesAccess().getIInstruccionesParserRuleCall_1_1_2_0());
						}
						lv_i_6_0=ruleinstrucciones
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstruccionesRule());
							}
							set(
								$current,
								"i",
								lv_i_6_0,
								"linit.Linit.instrucciones");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				{
					newCompositeNode(grammarAccess.getInstruccionesAccess().getLlamadaIdentificadorParserRuleCall_1_2_0());
				}
				rulellamadaIdentificador
				{
					afterParserOrEnumRuleCall();
				}
				otherlv_8='.'
				{
					newLeafNode(otherlv_8, grammarAccess.getInstruccionesAccess().getFullStopKeyword_1_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInstruccionesAccess().getIInstruccionesParserRuleCall_1_2_2_0());
						}
						lv_i_9_0=ruleinstrucciones
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstruccionesRule());
							}
							set(
								$current,
								"i",
								lv_i_9_0,
								"linit.Linit.instrucciones");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getInstruccionesAccess().getCCondicionalParserRuleCall_1_3_0_0());
						}
						lv_c_10_0=rulecondicional
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstruccionesRule());
							}
							set(
								$current,
								"c",
								lv_c_10_0,
								"linit.Linit.condicional");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_11='.'
				{
					newLeafNode(otherlv_11, grammarAccess.getInstruccionesAccess().getFullStopKeyword_1_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInstruccionesAccess().getIInstruccionesParserRuleCall_1_3_2_0());
						}
						lv_i_12_0=ruleinstrucciones
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstruccionesRule());
							}
							set(
								$current,
								"i",
								lv_i_12_0,
								"linit.Linit.instrucciones");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getInstruccionesAccess().getFCicloParserRuleCall_1_4_0_0());
						}
						lv_f_13_0=ruleciclo
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstruccionesRule());
							}
							add(
								$current,
								"f",
								lv_f_13_0,
								"linit.Linit.ciclo");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_14='.'
				{
					newLeafNode(otherlv_14, grammarAccess.getInstruccionesAccess().getFullStopKeyword_1_4_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInstruccionesAccess().getIInstruccionesParserRuleCall_1_4_2_0());
						}
						lv_i_15_0=ruleinstrucciones
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstruccionesRule());
							}
							set(
								$current,
								"i",
								lv_i_15_0,
								"linit.Linit.instrucciones");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				{
					newCompositeNode(grammarAccess.getInstruccionesAccess().getImpresionParserRuleCall_1_5_0());
				}
				ruleimpresion
				{
					afterParserOrEnumRuleCall();
				}
				otherlv_17='.'
				{
					newLeafNode(otherlv_17, grammarAccess.getInstruccionesAccess().getFullStopKeyword_1_5_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInstruccionesAccess().getIInstruccionesParserRuleCall_1_5_2_0());
						}
						lv_i_18_0=ruleinstrucciones
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstruccionesRule());
							}
							set(
								$current,
								"i",
								lv_i_18_0,
								"linit.Linit.instrucciones");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				{
					newCompositeNode(grammarAccess.getInstruccionesAccess().getEntradaParserRuleCall_1_6_0());
				}
				ruleentrada
				{
					afterParserOrEnumRuleCall();
				}
				otherlv_20='.'
				{
					newLeafNode(otherlv_20, grammarAccess.getInstruccionesAccess().getFullStopKeyword_1_6_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInstruccionesAccess().getIInstruccionesParserRuleCall_1_6_2_0());
						}
						lv_i_21_0=ruleinstrucciones
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstruccionesRule());
							}
							set(
								$current,
								"i",
								lv_i_21_0,
								"linit.Linit.instrucciones");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRulenominacion
entryRulenominacion returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNominacionRule()); }
	iv_rulenominacion=rulenominacion
	{ $current=$iv_rulenominacion.current.getText(); }
	EOF;

// Rule nominacion
rulenominacion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				kw='VARIABLE'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getNominacionAccess().getVARIABLEKeyword_0_0_0());
				}
				    |
				this_VARIABLE_1=RULE_VARIABLE
				{
					$current.merge(this_VARIABLE_1);
				}
				{
					newLeafNode(this_VARIABLE_1, grammarAccess.getNominacionAccess().getVARIABLETerminalRuleCall_0_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getNominacionAccess().getTipoVariableParserRuleCall_0_1());
			}
			this_tipoVariable_2=ruletipoVariable
			{
				$current.merge(this_tipoVariable_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			this_IDENTIFICADOR_3=RULE_IDENTIFICADOR
			{
				$current.merge(this_IDENTIFICADOR_3);
			}
			{
				newLeafNode(this_IDENTIFICADOR_3, grammarAccess.getNominacionAccess().getIDENTIFICADORTerminalRuleCall_0_2());
			}
			(
				{
					newCompositeNode(grammarAccess.getNominacionAccess().getIgualdadParserRuleCall_0_3());
				}
				this_igualdad_4=ruleigualdad
				{
					$current.merge(this_igualdad_4);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)?
		)
		    |
		(
			(
				kw='CONSTANTE'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getNominacionAccess().getCONSTANTEKeyword_1_0_0());
				}
				    |
				this_CONSTANTE_6=RULE_CONSTANTE
				{
					$current.merge(this_CONSTANTE_6);
				}
				{
					newLeafNode(this_CONSTANTE_6, grammarAccess.getNominacionAccess().getCONSTANTETerminalRuleCall_1_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getNominacionAccess().getTipoVariableParserRuleCall_1_1());
			}
			this_tipoVariable_7=ruletipoVariable
			{
				$current.merge(this_tipoVariable_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
			this_IDENTIFICADOR_8=RULE_IDENTIFICADOR
			{
				$current.merge(this_IDENTIFICADOR_8);
			}
			{
				newLeafNode(this_IDENTIFICADOR_8, grammarAccess.getNominacionAccess().getIDENTIFICADORTerminalRuleCall_1_2());
			}
			{
				newCompositeNode(grammarAccess.getNominacionAccess().getIgualdadParserRuleCall_1_3());
			}
			this_igualdad_9=ruleigualdad
			{
				$current.merge(this_igualdad_9);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulearreglo
entryRulearreglo returns [String current=null]:
	{ newCompositeNode(grammarAccess.getArregloRule()); }
	iv_rulearreglo=rulearreglo
	{ $current=$iv_rulearreglo.current.getText(); }
	EOF;

// Rule arreglo
rulearreglo returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='ARREGLO'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getArregloAccess().getARREGLOKeyword_0_0());
			}
			    |
			this_AREGLO_1=RULE_AREGLO
			{
				$current.merge(this_AREGLO_1);
			}
			{
				newLeafNode(this_AREGLO_1, grammarAccess.getArregloAccess().getAREGLOTerminalRuleCall_0_1());
			}
		)
		(
			kw='VARIABLE'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getArregloAccess().getVARIABLEKeyword_1_0());
			}
			    |
			this_VARIABLE_3=RULE_VARIABLE
			{
				$current.merge(this_VARIABLE_3);
			}
			{
				newLeafNode(this_VARIABLE_3, grammarAccess.getArregloAccess().getVARIABLETerminalRuleCall_1_1());
			}
		)
		this_IDENTIFICADOR_4=RULE_IDENTIFICADOR
		{
			$current.merge(this_IDENTIFICADOR_4);
		}
		{
			newLeafNode(this_IDENTIFICADOR_4, grammarAccess.getArregloAccess().getIDENTIFICADORTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRulellamadaIdentificador
entryRulellamadaIdentificador returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLlamadaIdentificadorRule()); }
	iv_rulellamadaIdentificador=rulellamadaIdentificador
	{ $current=$iv_rulellamadaIdentificador.current.getText(); }
	EOF;

// Rule llamadaIdentificador
rulellamadaIdentificador returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_IDENTIFICADOR_0=RULE_IDENTIFICADOR
			{
				$current.merge(this_IDENTIFICADOR_0);
			}
			{
				newLeafNode(this_IDENTIFICADOR_0, grammarAccess.getLlamadaIdentificadorAccess().getIDENTIFICADORTerminalRuleCall_0_0());
			}
			(
				this_CUADRADOI_1=RULE_CUADRADOI
				{
					$current.merge(this_CUADRADOI_1);
				}
				{
					newLeafNode(this_CUADRADOI_1, grammarAccess.getLlamadaIdentificadorAccess().getCUADRADOITerminalRuleCall_0_1_0());
				}
				{
					newCompositeNode(grammarAccess.getLlamadaIdentificadorAccess().getExpresionParserRuleCall_0_1_1());
				}
				this_expresion_2=ruleexpresion
				{
					$current.merge(this_expresion_2);
				}
				{
					afterParserOrEnumRuleCall();
				}
				{
					newCompositeNode(grammarAccess.getLlamadaIdentificadorAccess().getListaArregloParserRuleCall_0_1_2());
				}
				this_listaArreglo_3=rulelistaArreglo
				{
					$current.merge(this_listaArreglo_3);
				}
				{
					afterParserOrEnumRuleCall();
				}
				this_CUADRADOD_4=RULE_CUADRADOD
				{
					$current.merge(this_CUADRADOD_4);
				}
				{
					newLeafNode(this_CUADRADOD_4, grammarAccess.getLlamadaIdentificadorAccess().getCUADRADODTerminalRuleCall_0_1_3());
				}
			)?
			{
				newCompositeNode(grammarAccess.getLlamadaIdentificadorAccess().getIgualdadParserRuleCall_0_2());
			}
			this_igualdad_5=ruleigualdad
			{
				$current.merge(this_igualdad_5);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			this_IDENTIFICADOR_6=RULE_IDENTIFICADOR
			{
				$current.merge(this_IDENTIFICADOR_6);
			}
			{
				newLeafNode(this_IDENTIFICADOR_6, grammarAccess.getLlamadaIdentificadorAccess().getIDENTIFICADORTerminalRuleCall_1_0());
			}
			(
				(
					kw='IMPORTA'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getLlamadaIdentificadorAccess().getIMPORTAKeyword_1_1_0_0());
					}
					    |
					this_IMPORTA_8=RULE_IMPORTA
					{
						$current.merge(this_IMPORTA_8);
					}
					{
						newLeafNode(this_IMPORTA_8, grammarAccess.getLlamadaIdentificadorAccess().getIMPORTATerminalRuleCall_1_1_0_1());
					}
				)
				{
					newCompositeNode(grammarAccess.getLlamadaIdentificadorAccess().getExpresionParserRuleCall_1_1_1());
				}
				this_expresion_9=ruleexpresion
				{
					$current.merge(this_expresion_9);
				}
				{
					afterParserOrEnumRuleCall();
				}
				{
					newCompositeNode(grammarAccess.getLlamadaIdentificadorAccess().getListaArregloParserRuleCall_1_1_2());
				}
				this_listaArreglo_10=rulelistaArreglo
				{
					$current.merge(this_listaArreglo_10);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)?
			(
				(
					kw='EXPORTA'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getLlamadaIdentificadorAccess().getEXPORTAKeyword_1_2_0_0());
					}
					    |
					this_EXPORTA_12=RULE_EXPORTA
					{
						$current.merge(this_EXPORTA_12);
					}
					{
						newLeafNode(this_EXPORTA_12, grammarAccess.getLlamadaIdentificadorAccess().getEXPORTATerminalRuleCall_1_2_0_1());
					}
				)
				this_IDENTIFICADOR_13=RULE_IDENTIFICADOR
				{
					$current.merge(this_IDENTIFICADOR_13);
				}
				{
					newLeafNode(this_IDENTIFICADOR_13, grammarAccess.getLlamadaIdentificadorAccess().getIDENTIFICADORTerminalRuleCall_1_2_1());
				}
				{
					newCompositeNode(grammarAccess.getLlamadaIdentificadorAccess().getListaIdentificadoresParserRuleCall_1_2_2());
				}
				this_listaIdentificadores_14=rulelistaIdentificadores
				{
					$current.merge(this_listaIdentificadores_14);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)?
		)
	)
;

// Entry rule entryRulecondicional
entryRulecondicional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCondicionalRule()); }
	iv_rulecondicional=rulecondicional
	{ $current=$iv_rulecondicional.current; }
	EOF;

// Rule condicional
rulecondicional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='SI'
			{
				newLeafNode(otherlv_0, grammarAccess.getCondicionalAccess().getSIKeyword_0_0());
			}
			    |
			this_SI_1=RULE_SI
			{
				newLeafNode(this_SI_1, grammarAccess.getCondicionalAccess().getSITerminalRuleCall_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getCondicionalAccess().getExpresionParserRuleCall_1());
		}
		ruleexpresion
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getCondicionalAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCondicionalAccess().getIInstruccionesParserRuleCall_3_0());
				}
				lv_i_4_0=ruleinstrucciones
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondicionalRule());
					}
					set(
						$current,
						"i",
						lv_i_4_0,
						"linit.Linit.instrucciones");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCondicionalAccess().getLListaCondicionalParserRuleCall_4_0());
				}
				lv_l_5_0=rulelistaCondicional
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondicionalRule());
					}
					set(
						$current,
						"l",
						lv_l_5_0,
						"linit.Linit.listaCondicional");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='FIN'
			{
				newLeafNode(otherlv_6, grammarAccess.getCondicionalAccess().getFINKeyword_5_0());
			}
			    |
			this_FIN_7=RULE_FIN
			{
				newLeafNode(this_FIN_7, grammarAccess.getCondicionalAccess().getFINTerminalRuleCall_5_1());
			}
		)
	)
;

// Entry rule entryRuleciclo
entryRuleciclo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCicloRule()); }
	iv_ruleciclo=ruleciclo
	{ $current=$iv_ruleciclo.current; }
	EOF;

// Rule ciclo
ruleciclo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='REPETIR'
				{
					newLeafNode(otherlv_0, grammarAccess.getCicloAccess().getREPETIRKeyword_0_0_0());
				}
				    |
				this_REPETIR_1=RULE_REPETIR
				{
					newLeafNode(this_REPETIR_1, grammarAccess.getCicloAccess().getREPETIRTerminalRuleCall_0_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getCicloAccess().getExpresionParserRuleCall_0_1());
			}
			ruleexpresion
			{
				afterParserOrEnumRuleCall();
			}
			(
				otherlv_3='VECES'
				{
					newLeafNode(otherlv_3, grammarAccess.getCicloAccess().getVECESKeyword_0_2_0());
				}
				    |
				this_VECES_4=RULE_VECES
				{
					newLeafNode(this_VECES_4, grammarAccess.getCicloAccess().getVECESTerminalRuleCall_0_2_1());
				}
			)
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getCicloAccess().getColonKeyword_0_3());
			}
			{
				newCompositeNode(grammarAccess.getCicloAccess().getInstruccionesParserRuleCall_0_4());
			}
			this_instrucciones_6=ruleinstrucciones
			{
				$current = $this_instrucciones_6.current;
				afterParserOrEnumRuleCall();
			}
			(
				otherlv_7='FIN'
				{
					newLeafNode(otherlv_7, grammarAccess.getCicloAccess().getFINKeyword_0_5_0());
				}
				    |
				this_FIN_8=RULE_FIN
				{
					newLeafNode(this_FIN_8, grammarAccess.getCicloAccess().getFINTerminalRuleCall_0_5_1());
				}
			)
		)
		    |
		(
			(
				otherlv_9='REPETIR'
				{
					newLeafNode(otherlv_9, grammarAccess.getCicloAccess().getREPETIRKeyword_1_0_0());
				}
				    |
				this_REPETIR_10=RULE_REPETIR
				{
					newLeafNode(this_REPETIR_10, grammarAccess.getCicloAccess().getREPETIRTerminalRuleCall_1_0_1());
				}
			)
			(
				otherlv_11='MIENTRAS'
				{
					newLeafNode(otherlv_11, grammarAccess.getCicloAccess().getMIENTRASKeyword_1_1_0());
				}
				    |
				this_MIENTRAS_12=RULE_MIENTRAS
				{
					newLeafNode(this_MIENTRAS_12, grammarAccess.getCicloAccess().getMIENTRASTerminalRuleCall_1_1_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getCicloAccess().getExpresionParserRuleCall_1_2());
			}
			ruleexpresion
			{
				afterParserOrEnumRuleCall();
			}
			(
				otherlv_14='SEA'
				{
					newLeafNode(otherlv_14, grammarAccess.getCicloAccess().getSEAKeyword_1_3_0());
				}
				    |
				this_SEA_15=RULE_SEA
				{
					newLeafNode(this_SEA_15, grammarAccess.getCicloAccess().getSEATerminalRuleCall_1_3_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getCicloAccess().getLogicoParserRuleCall_1_4());
			}
			rulelogico
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_17=':'
			{
				newLeafNode(otherlv_17, grammarAccess.getCicloAccess().getColonKeyword_1_5());
			}
			{
				newCompositeNode(grammarAccess.getCicloAccess().getInstruccionesParserRuleCall_1_6());
			}
			this_instrucciones_18=ruleinstrucciones
			{
				$current = $this_instrucciones_18.current;
				afterParserOrEnumRuleCall();
			}
			(
				otherlv_19='FIN'
				{
					newLeafNode(otherlv_19, grammarAccess.getCicloAccess().getFINKeyword_1_7_0());
				}
				    |
				this_FIN_20=RULE_FIN
				{
					newLeafNode(this_FIN_20, grammarAccess.getCicloAccess().getFINTerminalRuleCall_1_7_1());
				}
			)
		)
	)
;

// Entry rule entryRuleimpresion
entryRuleimpresion returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImpresionRule()); }
	iv_ruleimpresion=ruleimpresion
	{ $current=$iv_ruleimpresion.current.getText(); }
	EOF;

// Rule impresion
ruleimpresion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='IMPRIMIR EN CONSOLA'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImpresionAccess().getIMPRIMIRENCONSOLAKeyword_0_0());
			}
			    |
			this_IMPRIMIR_1=RULE_IMPRIMIR
			{
				$current.merge(this_IMPRIMIR_1);
			}
			{
				newLeafNode(this_IMPRIMIR_1, grammarAccess.getImpresionAccess().getIMPRIMIRTerminalRuleCall_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getImpresionAccess().getExpresionParserRuleCall_1());
		}
		this_expresion_2=ruleexpresion
		{
			$current.merge(this_expresion_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getImpresionAccess().getListaImpresionParserRuleCall_2());
		}
		this_listaImpresion_3=rulelistaImpresion
		{
			$current.merge(this_listaImpresion_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleentrada
entryRuleentrada returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEntradaRule()); }
	iv_ruleentrada=ruleentrada
	{ $current=$iv_ruleentrada.current.getText(); }
	EOF;

// Rule entrada
ruleentrada returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='CAPTURAR DE CONSOLA'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEntradaAccess().getCAPTURARDECONSOLAKeyword_0_0());
			}
			    |
			this_CAPTURAR_1=RULE_CAPTURAR
			{
				$current.merge(this_CAPTURAR_1);
			}
			{
				newLeafNode(this_CAPTURAR_1, grammarAccess.getEntradaAccess().getCAPTURARTerminalRuleCall_0_1());
			}
		)
		this_IDENTIFICADOR_2=RULE_IDENTIFICADOR
		{
			$current.merge(this_IDENTIFICADOR_2);
		}
		{
			newLeafNode(this_IDENTIFICADOR_2, grammarAccess.getEntradaAccess().getIDENTIFICADORTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuletipoVariable
entryRuletipoVariable returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTipoVariableRule()); }
	iv_ruletipoVariable=ruletipoVariable
	{ $current=$iv_ruletipoVariable.current.getText(); }
	EOF;

// Rule tipoVariable
ruletipoVariable returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='ENTERA'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTipoVariableAccess().getENTERAKeyword_0_0());
			}
			    |
			this_ENTERA_1=RULE_ENTERA
			{
				$current.merge(this_ENTERA_1);
			}
			{
				newLeafNode(this_ENTERA_1, grammarAccess.getTipoVariableAccess().getENTERATerminalRuleCall_0_1());
			}
		)
		    |
		(
			kw='REAL'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTipoVariableAccess().getREALKeyword_1_0());
			}
			    |
			this_REAL_3=RULE_REAL
			{
				$current.merge(this_REAL_3);
			}
			{
				newLeafNode(this_REAL_3, grammarAccess.getTipoVariableAccess().getREALTerminalRuleCall_1_1());
			}
		)
		    |
		(
			kw='LOGICA'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTipoVariableAccess().getLOGICAKeyword_2_0());
			}
			    |
			this_LOGICA_5=RULE_LOGICA
			{
				$current.merge(this_LOGICA_5);
			}
			{
				newLeafNode(this_LOGICA_5, grammarAccess.getTipoVariableAccess().getLOGICATerminalRuleCall_2_1());
			}
		)
		    |
		(
			kw='DE CARACTERES'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTipoVariableAccess().getDECARACTERESKeyword_3_0());
			}
			    |
			this_CARACTERES_7=RULE_CARACTERES
			{
				$current.merge(this_CARACTERES_7);
			}
			{
				newLeafNode(this_CARACTERES_7, grammarAccess.getTipoVariableAccess().getCARACTERESTerminalRuleCall_3_1());
			}
		)
	)
;

// Entry rule entryRuleigualdad
entryRuleigualdad returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIgualdadRule()); }
	iv_ruleigualdad=ruleigualdad
	{ $current=$iv_ruleigualdad.current.getText(); }
	EOF;

// Rule igualdad
ruleigualdad returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				kw='ES IGUAL A'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getIgualdadAccess().getESIGUALAKeyword_0_0_0());
				}
				    |
				this_IGUAL_1=RULE_IGUAL
				{
					$current.merge(this_IGUAL_1);
				}
				{
					newLeafNode(this_IGUAL_1, grammarAccess.getIgualdadAccess().getIGUALTerminalRuleCall_0_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getIgualdadAccess().getExpresionParserRuleCall_0_1());
			}
			this_expresion_2=ruleexpresion
			{
				$current.merge(this_expresion_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			this_SIGNOIGUAL_3=RULE_SIGNOIGUAL
			{
				$current.merge(this_SIGNOIGUAL_3);
			}
			{
				newLeafNode(this_SIGNOIGUAL_3, grammarAccess.getIgualdadAccess().getSIGNOIGUALTerminalRuleCall_1_0());
			}
			{
				newCompositeNode(grammarAccess.getIgualdadAccess().getExpresionParserRuleCall_1_1());
			}
			this_expresion_4=ruleexpresion
			{
				$current.merge(this_expresion_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulelistaIdentificadores
entryRulelistaIdentificadores returns [String current=null]:
	{ newCompositeNode(grammarAccess.getListaIdentificadoresRule()); }
	iv_rulelistaIdentificadores=rulelistaIdentificadores
	{ $current=$iv_rulelistaIdentificadores.current.getText(); }
	EOF;

// Rule listaIdentificadores
rulelistaIdentificadores returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getListaIdentificadoresAccess().getSemicolonKeyword_0());
		}
		this_IDENTIFICADOR_1=RULE_IDENTIFICADOR
		{
			$current.merge(this_IDENTIFICADOR_1);
		}
		{
			newLeafNode(this_IDENTIFICADOR_1, grammarAccess.getListaIdentificadoresAccess().getIDENTIFICADORTerminalRuleCall_1());
		}
		{
			newCompositeNode(grammarAccess.getListaIdentificadoresAccess().getListaIdentificadoresParserRuleCall_2());
		}
		this_listaIdentificadores_2=rulelistaIdentificadores
		{
			$current.merge(this_listaIdentificadores_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)?
;

// Entry rule entryRuleexpresion
entryRuleexpresion returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExpresionRule()); }
	iv_ruleexpresion=ruleexpresion
	{ $current=$iv_ruleexpresion.current.getText(); }
	EOF;

// Rule expresion
ruleexpresion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpresionAccess().getOperacionOYParserRuleCall());
	}
	this_operacionOY_0=ruleoperacionOY
	{
		$current.merge(this_operacionOY_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleoperacionOY
entryRuleoperacionOY returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOperacionOYRule()); }
	iv_ruleoperacionOY=ruleoperacionOY
	{ $current=$iv_ruleoperacionOY.current.getText(); }
	EOF;

// Rule operacionOY
ruleoperacionOY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperacionOYAccess().getComparacionParserRuleCall_0());
		}
		this_comparacion_0=rulecomparacion
		{
			$current.merge(this_comparacion_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				kw='Y'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOperacionOYAccess().getYKeyword_1_0_0());
				}
				    |
				this_SIGNOY_2=RULE_SIGNOY
				{
					$current.merge(this_SIGNOY_2);
				}
				{
					newLeafNode(this_SIGNOY_2, grammarAccess.getOperacionOYAccess().getSIGNOYTerminalRuleCall_1_0_1());
				}
				    |
				kw='O'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOperacionOYAccess().getOKeyword_1_0_2());
				}
				    |
				this_SIGNOO_4=RULE_SIGNOO
				{
					$current.merge(this_SIGNOO_4);
				}
				{
					newLeafNode(this_SIGNOO_4, grammarAccess.getOperacionOYAccess().getSIGNOOTerminalRuleCall_1_0_3());
				}
			)
			{
				newCompositeNode(grammarAccess.getOperacionOYAccess().getOperacionOYParserRuleCall_1_1());
			}
			this_operacionOY_5=ruleoperacionOY
			{
				$current.merge(this_operacionOY_5);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRulecomparacion
entryRulecomparacion returns [String current=null]:
	{ newCompositeNode(grammarAccess.getComparacionRule()); }
	iv_rulecomparacion=rulecomparacion
	{ $current=$iv_rulecomparacion.current.getText(); }
	EOF;

// Rule comparacion
rulecomparacion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparacionAccess().getAritmeticaParserRuleCall_0());
		}
		this_aritmetica_0=rulearitmetica
		{
			$current.merge(this_aritmetica_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			{
				newCompositeNode(grammarAccess.getComparacionAccess().getOpcomparacionParserRuleCall_1_0());
			}
			this_opcomparacion_1=ruleopcomparacion
			{
				$current.merge(this_opcomparacion_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getComparacionAccess().getComparacionParserRuleCall_1_1());
			}
			this_comparacion_2=rulecomparacion
			{
				$current.merge(this_comparacion_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleopcomparacion
entryRuleopcomparacion returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpcomparacionRule()); }
	iv_ruleopcomparacion=ruleopcomparacion
	{ $current=$iv_ruleopcomparacion.current.getText(); }
	EOF;

// Rule opcomparacion
ruleopcomparacion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				kw='ES MENOR A'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpcomparacionAccess().getESMENORAKeyword_0_0_0());
				}
				    |
				this_MENOR_1=RULE_MENOR
				{
					$current.merge(this_MENOR_1);
				}
				{
					newLeafNode(this_MENOR_1, grammarAccess.getOpcomparacionAccess().getMENORTerminalRuleCall_0_0_1());
				}
			)
			    |
			this_SIGNOMENOR_2=RULE_SIGNOMENOR
			{
				$current.merge(this_SIGNOMENOR_2);
			}
			{
				newLeafNode(this_SIGNOMENOR_2, grammarAccess.getOpcomparacionAccess().getSIGNOMENORTerminalRuleCall_0_1());
			}
		)
		    |
		(
			(
				kw='ES MENOR O IGUAL A'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpcomparacionAccess().getESMENOROIGUALAKeyword_1_0_0());
				}
				    |
				this_MENORIGUAL_4=RULE_MENORIGUAL
				{
					$current.merge(this_MENORIGUAL_4);
				}
				{
					newLeafNode(this_MENORIGUAL_4, grammarAccess.getOpcomparacionAccess().getMENORIGUALTerminalRuleCall_1_0_1());
				}
			)
			    |
			this_SIGNOMENORIGUAL_5=RULE_SIGNOMENORIGUAL
			{
				$current.merge(this_SIGNOMENORIGUAL_5);
			}
			{
				newLeafNode(this_SIGNOMENORIGUAL_5, grammarAccess.getOpcomparacionAccess().getSIGNOMENORIGUALTerminalRuleCall_1_1());
			}
		)
		    |
		(
			(
				kw='ES MAYOR A'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpcomparacionAccess().getESMAYORAKeyword_2_0_0());
				}
				    |
				this_MAYOR_7=RULE_MAYOR
				{
					$current.merge(this_MAYOR_7);
				}
				{
					newLeafNode(this_MAYOR_7, grammarAccess.getOpcomparacionAccess().getMAYORTerminalRuleCall_2_0_1());
				}
			)
			    |
			this_SIGNOMAYOR_8=RULE_SIGNOMAYOR
			{
				$current.merge(this_SIGNOMAYOR_8);
			}
			{
				newLeafNode(this_SIGNOMAYOR_8, grammarAccess.getOpcomparacionAccess().getSIGNOMAYORTerminalRuleCall_2_1());
			}
		)
		    |
		(
			(
				kw='ES MAYOR O IGUAL A'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpcomparacionAccess().getESMAYOROIGUALAKeyword_3_0_0());
				}
				    |
				this_MAYORIGUAL_10=RULE_MAYORIGUAL
				{
					$current.merge(this_MAYORIGUAL_10);
				}
				{
					newLeafNode(this_MAYORIGUAL_10, grammarAccess.getOpcomparacionAccess().getMAYORIGUALTerminalRuleCall_3_0_1());
				}
			)
			    |
			this_SIGNOMAYORIGUAL_11=RULE_SIGNOMAYORIGUAL
			{
				$current.merge(this_SIGNOMAYORIGUAL_11);
			}
			{
				newLeafNode(this_SIGNOMAYORIGUAL_11, grammarAccess.getOpcomparacionAccess().getSIGNOMAYORIGUALTerminalRuleCall_3_1());
			}
		)
		    |
		(
			(
				kw='ES DIFERENTE DE A'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpcomparacionAccess().getESDIFERENTEDEAKeyword_4_0_0());
				}
				    |
				this_DIFERENTE_13=RULE_DIFERENTE
				{
					$current.merge(this_DIFERENTE_13);
				}
				{
					newLeafNode(this_DIFERENTE_13, grammarAccess.getOpcomparacionAccess().getDIFERENTETerminalRuleCall_4_0_1());
				}
			)
			    |
			this_SIGNODIFERENTE_14=RULE_SIGNODIFERENTE
			{
				$current.merge(this_SIGNODIFERENTE_14);
			}
			{
				newLeafNode(this_SIGNODIFERENTE_14, grammarAccess.getOpcomparacionAccess().getSIGNODIFERENTETerminalRuleCall_4_1());
			}
		)
		    |
		(
			(
				kw='ES IGUAL A'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpcomparacionAccess().getESIGUALAKeyword_5_0_0());
				}
				    |
				this_IGUAL_16=RULE_IGUAL
				{
					$current.merge(this_IGUAL_16);
				}
				{
					newLeafNode(this_IGUAL_16, grammarAccess.getOpcomparacionAccess().getIGUALTerminalRuleCall_5_0_1());
				}
			)
			    |
			this_SIGNOIGUAL_17=RULE_SIGNOIGUAL
			{
				$current.merge(this_SIGNOIGUAL_17);
			}
			{
				newLeafNode(this_SIGNOIGUAL_17, grammarAccess.getOpcomparacionAccess().getSIGNOIGUALTerminalRuleCall_5_1());
			}
		)
	)
;

// Entry rule entryRulearitmetica
entryRulearitmetica returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAritmeticaRule()); }
	iv_rulearitmetica=rulearitmetica
	{ $current=$iv_rulearitmetica.current.getText(); }
	EOF;

// Rule aritmetica
rulearitmetica returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAritmeticaAccess().getMultiplicacion_ParserRuleCall_0());
		}
		this_multiplicacion__0=rulemultiplicacion_
		{
			$current.merge(this_multiplicacion__0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				this_SUMA_1=RULE_SUMA
				{
					$current.merge(this_SUMA_1);
				}
				{
					newLeafNode(this_SUMA_1, grammarAccess.getAritmeticaAccess().getSUMATerminalRuleCall_1_0_0());
				}
				    |
				this_RESTA_2=RULE_RESTA
				{
					$current.merge(this_RESTA_2);
				}
				{
					newLeafNode(this_RESTA_2, grammarAccess.getAritmeticaAccess().getRESTATerminalRuleCall_1_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getAritmeticaAccess().getAritmeticaParserRuleCall_1_1());
			}
			this_aritmetica_3=rulearitmetica
			{
				$current.merge(this_aritmetica_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRulemultiplicacion_
entryRulemultiplicacion_ returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicacion_Rule()); }
	iv_rulemultiplicacion_=rulemultiplicacion_
	{ $current=$iv_rulemultiplicacion_.current.getText(); }
	EOF;

// Rule multiplicacion_
rulemultiplicacion_ returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicacion_Access().getPotenciacionParserRuleCall_0());
		}
		this_potenciacion_0=rulepotenciacion
		{
			$current.merge(this_potenciacion_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				this_MULTIPLICACION_1=RULE_MULTIPLICACION
				{
					$current.merge(this_MULTIPLICACION_1);
				}
				{
					newLeafNode(this_MULTIPLICACION_1, grammarAccess.getMultiplicacion_Access().getMULTIPLICACIONTerminalRuleCall_1_0_0());
				}
				    |
				this_DIVISION_2=RULE_DIVISION
				{
					$current.merge(this_DIVISION_2);
				}
				{
					newLeafNode(this_DIVISION_2, grammarAccess.getMultiplicacion_Access().getDIVISIONTerminalRuleCall_1_0_1());
				}
				    |
				this_MODULO_3=RULE_MODULO
				{
					$current.merge(this_MODULO_3);
				}
				{
					newLeafNode(this_MODULO_3, grammarAccess.getMultiplicacion_Access().getMODULOTerminalRuleCall_1_0_2());
				}
			)
			{
				newCompositeNode(grammarAccess.getMultiplicacion_Access().getMultiplicacion_ParserRuleCall_1_1());
			}
			this_multiplicacion__4=rulemultiplicacion_
			{
				$current.merge(this_multiplicacion__4);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRulepotenciacion
entryRulepotenciacion returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPotenciacionRule()); }
	iv_rulepotenciacion=rulepotenciacion
	{ $current=$iv_rulepotenciacion.current.getText(); }
	EOF;

// Rule potenciacion
rulepotenciacion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPotenciacionAccess().getNegacionParserRuleCall_0());
		}
		this_negacion_0=rulenegacion
		{
			$current.merge(this_negacion_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			this_POTENCIA_1=RULE_POTENCIA
			{
				$current.merge(this_POTENCIA_1);
			}
			{
				newLeafNode(this_POTENCIA_1, grammarAccess.getPotenciacionAccess().getPOTENCIATerminalRuleCall_1_0());
			}
			{
				newCompositeNode(grammarAccess.getPotenciacionAccess().getPotenciacionParserRuleCall_1_1());
			}
			this_potenciacion_2=rulepotenciacion
			{
				$current.merge(this_potenciacion_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRulenegacion
entryRulenegacion returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNegacionRule()); }
	iv_rulenegacion=rulenegacion
	{ $current=$iv_rulenegacion.current.getText(); }
	EOF;

// Rule negacion
rulenegacion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='NO SUCEDE'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNegacionAccess().getNOSUCEDEKeyword_0_0());
			}
			    |
			this_NO_1=RULE_NO
			{
				$current.merge(this_NO_1);
			}
			{
				newLeafNode(this_NO_1, grammarAccess.getNegacionAccess().getNOTerminalRuleCall_0_1());
			}
		)*
		{
			newCompositeNode(grammarAccess.getNegacionAccess().getParentesisParserRuleCall_1());
		}
		this_parentesis_2=ruleparentesis
		{
			$current.merge(this_parentesis_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleparentesis
entryRuleparentesis returns [String current=null]:
	{ newCompositeNode(grammarAccess.getParentesisRule()); }
	iv_ruleparentesis=ruleparentesis
	{ $current=$iv_ruleparentesis.current.getText(); }
	EOF;

// Rule parentesis
ruleparentesis returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_IZQUIERDO_0=RULE_IZQUIERDO
			{
				$current.merge(this_IZQUIERDO_0);
			}
			{
				newLeafNode(this_IZQUIERDO_0, grammarAccess.getParentesisAccess().getIZQUIERDOTerminalRuleCall_0_0());
			}
			{
				newCompositeNode(grammarAccess.getParentesisAccess().getExpresionParserRuleCall_0_1());
			}
			this_expresion_1=ruleexpresion
			{
				$current.merge(this_expresion_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			this_DERECHO_2=RULE_DERECHO
			{
				$current.merge(this_DERECHO_2);
			}
			{
				newLeafNode(this_DERECHO_2, grammarAccess.getParentesisAccess().getDERECHOTerminalRuleCall_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getParentesisAccess().getDatoParserRuleCall_1());
		}
		this_dato_3=ruledato
		{
			$current.merge(this_dato_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuledato
entryRuledato returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDatoRule()); }
	iv_ruledato=ruledato
	{ $current=$iv_ruledato.current.getText(); }
	EOF;

// Rule dato
ruledato returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_IDENTIFICADOR_0=RULE_IDENTIFICADOR
			{
				$current.merge(this_IDENTIFICADOR_0);
			}
			{
				newLeafNode(this_IDENTIFICADOR_0, grammarAccess.getDatoAccess().getIDENTIFICADORTerminalRuleCall_0_0());
			}
			(
				this_CUADRADOI_1=RULE_CUADRADOI
				{
					$current.merge(this_CUADRADOI_1);
				}
				{
					newLeafNode(this_CUADRADOI_1, grammarAccess.getDatoAccess().getCUADRADOITerminalRuleCall_0_1_0());
				}
				{
					newCompositeNode(grammarAccess.getDatoAccess().getExpresionParserRuleCall_0_1_1());
				}
				this_expresion_2=ruleexpresion
				{
					$current.merge(this_expresion_2);
				}
				{
					afterParserOrEnumRuleCall();
				}
				{
					newCompositeNode(grammarAccess.getDatoAccess().getListaArregloParserRuleCall_0_1_2());
				}
				this_listaArreglo_3=rulelistaArreglo
				{
					$current.merge(this_listaArreglo_3);
				}
				{
					afterParserOrEnumRuleCall();
				}
				this_CUADRADOD_4=RULE_CUADRADOD
				{
					$current.merge(this_CUADRADOD_4);
				}
				{
					newLeafNode(this_CUADRADOD_4, grammarAccess.getDatoAccess().getCUADRADODTerminalRuleCall_0_1_3());
				}
			)?
		)
		    |
		{
			newCompositeNode(grammarAccess.getDatoAccess().getNumeroParserRuleCall_1());
		}
		this_numero_5=rulenumero
		{
			$current.merge(this_numero_5);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDatoAccess().getLogicoParserRuleCall_2());
		}
		this_logico_6=rulelogico
		{
			$current.merge(this_logico_6);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_FRASE_7=RULE_FRASE
		{
			$current.merge(this_FRASE_7);
		}
		{
			newLeafNode(this_FRASE_7, grammarAccess.getDatoAccess().getFRASETerminalRuleCall_3());
		}
	)
;

// Entry rule entryRulelogico
entryRulelogico returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLogicoRule()); }
	iv_rulelogico=rulelogico
	{ $current=$iv_rulelogico.current.getText(); }
	EOF;

// Rule logico
rulelogico returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='VERDADERO'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLogicoAccess().getVERDADEROKeyword_0_0());
			}
			    |
			this_VERDADERO_1=RULE_VERDADERO
			{
				$current.merge(this_VERDADERO_1);
			}
			{
				newLeafNode(this_VERDADERO_1, grammarAccess.getLogicoAccess().getVERDADEROTerminalRuleCall_0_1());
			}
		)
		    |
		(
			kw='FALSO'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLogicoAccess().getFALSOKeyword_1_0());
			}
			    |
			this_FALSO_3=RULE_FALSO
			{
				$current.merge(this_FALSO_3);
			}
			{
				newLeafNode(this_FALSO_3, grammarAccess.getLogicoAccess().getFALSOTerminalRuleCall_1_1());
			}
		)
	)
;

// Entry rule entryRulenumero
entryRulenumero returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNumeroRule()); }
	iv_rulenumero=rulenumero
	{ $current=$iv_rulenumero.current.getText(); }
	EOF;

// Rule numero
rulenumero returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ENTERO_0=RULE_ENTERO
		{
			$current.merge(this_ENTERO_0);
		}
		{
			newLeafNode(this_ENTERO_0, grammarAccess.getNumeroAccess().getENTEROTerminalRuleCall_0());
		}
		    |
		this_NREAL_1=RULE_NREAL
		{
			$current.merge(this_NREAL_1);
		}
		{
			newLeafNode(this_NREAL_1, grammarAccess.getNumeroAccess().getNREALTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRulelistaArreglo
entryRulelistaArreglo returns [String current=null]:
	{ newCompositeNode(grammarAccess.getListaArregloRule()); }
	iv_rulelistaArreglo=rulelistaArreglo
	{ $current=$iv_rulelistaArreglo.current.getText(); }
	EOF;

// Rule listaArreglo
rulelistaArreglo returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getListaArregloAccess().getSemicolonKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getListaArregloAccess().getExpresionParserRuleCall_1());
		}
		this_expresion_1=ruleexpresion
		{
			$current.merge(this_expresion_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getListaArregloAccess().getListaArregloParserRuleCall_2());
		}
		this_listaArreglo_2=rulelistaArreglo
		{
			$current.merge(this_listaArreglo_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)?
;

// Entry rule entryRulelistaCondicional
entryRulelistaCondicional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListaCondicionalRule()); }
	iv_rulelistaCondicional=rulelistaCondicional
	{ $current=$iv_rulelistaCondicional.current; }
	EOF;

// Rule listaCondicional
rulelistaCondicional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListaCondicionalAccess().getListaCondicionalAction_0(),
					$current);
			}
		)
		(
			(
				(
					otherlv_1='O SI'
					{
						newLeafNode(otherlv_1, grammarAccess.getListaCondicionalAccess().getOSIKeyword_1_0_0_0());
					}
					    |
					this_SINO_2=RULE_SINO
					{
						newLeafNode(this_SINO_2, grammarAccess.getListaCondicionalAccess().getSINOTerminalRuleCall_1_0_0_1());
					}
				)
				{
					newCompositeNode(grammarAccess.getListaCondicionalAccess().getExpresionParserRuleCall_1_0_1());
				}
				ruleexpresion
				{
					afterParserOrEnumRuleCall();
				}
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getListaCondicionalAccess().getColonKeyword_1_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getListaCondicionalAccess().getIInstruccionesParserRuleCall_1_0_3_0());
						}
						lv_i_5_0=ruleinstrucciones
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListaCondicionalRule());
							}
							set(
								$current,
								"i",
								lv_i_5_0,
								"linit.Linit.instrucciones");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getListaCondicionalAccess().getLListaCondicionalParserRuleCall_1_0_4_0());
						}
						lv_l_6_0=rulelistaCondicional
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListaCondicionalRule());
							}
							set(
								$current,
								"l",
								lv_l_6_0,
								"linit.Linit.listaCondicional");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					otherlv_7='EN OTRO CASO'
					{
						newLeafNode(otherlv_7, grammarAccess.getListaCondicionalAccess().getENOTROCASOKeyword_1_1_0_0());
					}
					    |
					this_OTROCASO_8=RULE_OTROCASO
					{
						newLeafNode(this_OTROCASO_8, grammarAccess.getListaCondicionalAccess().getOTROCASOTerminalRuleCall_1_1_0_1());
					}
				)
				otherlv_9=':'
				{
					newLeafNode(otherlv_9, grammarAccess.getListaCondicionalAccess().getColonKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getListaCondicionalAccess().getIInstruccionesParserRuleCall_1_1_2_0());
						}
						lv_i_10_0=ruleinstrucciones
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListaCondicionalRule());
							}
							set(
								$current,
								"i",
								lv_i_10_0,
								"linit.Linit.instrucciones");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRulelistaImpresion
entryRulelistaImpresion returns [String current=null]:
	{ newCompositeNode(grammarAccess.getListaImpresionRule()); }
	iv_rulelistaImpresion=rulelistaImpresion
	{ $current=$iv_rulelistaImpresion.current.getText(); }
	EOF;

// Rule listaImpresion
rulelistaImpresion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getListaImpresionAccess().getSemicolonKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getListaImpresionAccess().getExpresionParserRuleCall_1());
		}
		this_expresion_1=ruleexpresion
		{
			$current.merge(this_expresion_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getListaImpresionAccess().getListaImpresionParserRuleCall_2());
		}
		this_listaImpresion_2=rulelistaImpresion
		{
			$current.merge(this_listaImpresion_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)?
;

RULE_LINE_COMMENT : '>>' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_PROCEDIMIENTO : 'P' ('R'|'r') ('O'|'o') ('C'|'c') ('E'|'e') ('D'|'d') ('I'|'i') ('M'|'m') ('I'|'i') ('E'|'e') ('N'|'n') ('T'|'t') ('O'|'o');

RULE_IMPORTA : 'I' ('M'|'m') ('P'|'p') ('O'|'o') ('R'|'r') ('T'|'t') ('A'|'a');

RULE_EXPORTA : 'E' ('X'|'x') ('P'|'p') ('O'|'o') ('R'|'r') ('T'|'t') ('A'|'a');

RULE_VARIABLE : 'V' ('A'|'a') ('R'|'r') ('I'|'i') ('A'|'a') ('B'|'b') ('L'|'l') ('E'|'e');

RULE_CONSTANTE : 'C' ('O'|'o') ('N'|'n') ('S'|'s') ('T'|'t') ('A'|'a') ('N'|'n') ('T'|'t') ('E'|'e');

RULE_ENTERA : 'E' ('N'|'n') ('T'|'t') ('E'|'e') ('R'|'r') ('A'|'a');

RULE_REAL : 'R' ('E'|'e') ('A'|'a') ('L'|'l');

RULE_LOGICA : 'L' ('O'|'o') ('G'|'g') ('I'|'i') ('C'|'c') ('A'|'a');

RULE_CARACTERES : 'D' ('E'|'e') ' ' 'C' ('A'|'a') ('R'|'r') ('A'|'a') ('C'|'c') ('T'|'t') ('E'|'e') ('R'|'r') ('E'|'e') ('S'|'s');

RULE_SIGNOY : '/\\';

RULE_SIGNOO : '\\/';

RULE_MENOR : 'E' ('S'|'s') ' ' 'M' ('E'|'e') ('N'|'n') ('O'|'o') ('R'|'r');

RULE_SIGNOMENOR : '<';

RULE_MENORIGUAL : 'E' ('S'|'s') ' ' 'M' ('E'|'e') ('N'|'n') ('O'|'o') ('R'|'r') ' ' 'O' ' ' 'I' ('G'|'g') ('U'|'u') ('A'|'a') ('L'|'l');

RULE_SIGNOMENORIGUAL : '<=';

RULE_MAYOR : 'E' ('S'|'s') ' ' 'M' ('A'|'a') ('Y'|'y') ('O'|'o') ('R'|'r');

RULE_SIGNOMAYOR : '>';

RULE_MAYORIGUAL : 'E' ('S'|'s') ' ' 'M' ('A'|'a') ('Y'|'y') ('O'|'o') ('R'|'r') ' ' 'O' ' ' 'I' ('G'|'g') ('U'|'u') ('A'|'a') ('L'|'l');

RULE_SIGNOMAYORIGUAL : '>=';

RULE_IGUAL : 'E' ('S'|'s') ' ' 'I' ('G'|'g') ('U'|'u') ('A'|'a') ('L'|'l') ' ' 'A';

RULE_SIGNOIGUAL : '=';

RULE_DIFERENTE : 'E' ('S'|'s') ' ' 'D' ('I'|'i') ('F'|'f') ('E'|'e') ('R'|'r') ('E'|'e') ('N'|'n') ('T'|'t') ('E'|'e') ' ' 'D' ('E'|'e');

RULE_SIGNODIFERENTE : '/=';

RULE_SUMA : '+';

RULE_RESTA : '-';

RULE_MULTIPLICACION : '*';

RULE_DIVISION : '/';

RULE_MODULO : 'M' ('O'|'o') ('D'|'d') ('U'|'u') ('L'|'l') ('O'|'o');

RULE_POTENCIA : '**';

RULE_NO : 'N' ('O'|'o') ' ' 'S' ('U'|'u') ('C'|'c') ('E'|'e') ('D'|'d') ('E'|'e');

RULE_IZQUIERDO : '(';

RULE_DERECHO : ')';

RULE_ENTERO : RULE_INT;

RULE_NREAL : '-'? ('0'..'9')+ ',' ('0'..'9')+;

RULE_VERDADERO : 'V' ('E'|'e') ('R'|'r') ('D'|'d') ('A'|'a') ('D'|'d') ('E'|'e') ('R'|'r') ('O'|'o');

RULE_FALSO : 'F' ('A'|'a') ('L'|'l') ('S'|'s') ('O'|'o');

RULE_FRASE : '"' .* '"';

RULE_AREGLO : 'A' ('R'|'r') ('R'|'r') ('E'|'e') ('G'|'g') ('L'|'l') ('O'|'o');

RULE_CUADRADOI : '[';

RULE_CUADRADOD : ']';

RULE_SI : 'S' ('I'|'i');

RULE_ES : 'E' ('S'|'s');

RULE_SINO : 'O' ' ' 'S' ('I'|'i');

RULE_OTROCASO : 'E' ('N'|'n') ' ' 'O' ('T'|'t') ('R'|'r') ('O'|'o') ' ' 'C' ('A'|'a') ('S'|'s') ('O'|'o');

RULE_REPETIR : 'R' ('E'|'e') ('P'|'p') ('E'|'e') ('T'|'t') ('I'|'i') ('R'|'r');

RULE_MIENTRAS : 'M' ('I'|'i') ('E'|'e') ('N'|'n') ('T'|'t') ('R'|'r') ('A'|'a') ('S'|'s');

RULE_SEA : 'S' ('E'|'e') ('A'|'a');

RULE_VECES : 'V' ('E'|'e') ('C'|'c') ('E'|'e') ('S'|'s');

RULE_FIN : 'F' ('I'|'i') ('N'|'n');

RULE_IMPRIMIR : 'I' ('M'|'m') ('P'|'p') ('R'|'r') ('I'|'i') ('M'|'m') ('I'|'i') ('R'|'r') ' '+ 'E' ('N'|'n') ' ' 'C' ('O'|'o') ('N'|'n') ('S'|'s') ('O'|'o') ('L'|'l') ('A'|'a');

RULE_CAPTURAR : 'C' ('A'|'a') ('P'|'p') ('T'|'t') ('U'|'u') ('R'|'r') ('A'|'a') ('R'|'r') ' ' 'D' ('E'|'e')+ ' ' 'C' ('O'|'o') ('N'|'n') ('S'|'s') ('O'|'o') ('L'|'l') ('A'|'a');

RULE_IDENTIFICADOR : 'a'..'z' ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;
